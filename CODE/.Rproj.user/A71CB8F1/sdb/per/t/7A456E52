{
    "collab_server" : "",
    "contents" : "library(reshape2)\nlibrary(ggplot2)\nlibrary(devEMF)\nrm(list = ls())\nsetwd(\"D:/User/pschmidt/Desktop/Rath/Final/Publication/DATA\")\n################\nvar <- \"TMGES\"\n################\nsortis  <- c(\"BSA1\",   \"BSA2\",   \"DMK1\",  \"DMK2\")\nnewsors <- c(\"B2_BSA\", \"B3_BSA\", \"B2_PC\", \"B3_PC\")\n\n# Creat Lists to be created\nall_env <- matrix(list(),4,4)\nrow.names(all_env) <- newsors\ncolnames(all_env)  <- c(\"n\",\"rcbd\",\"alpha\",\"list\")\n\nall_G <- matrix(list(),4,1)\nrow.names(all_G) <- newsors\n\nall_L <- matrix(list(),4,1)\nrow.names(all_L) <- newsors\n\nfulldat <- read.delim(\"full_dataset.txt\",sep=\"\",na.strings = \"NA\")\n\nfor(d in 1:4){\n  dat <- fulldat[which(fulldat$Sorti==sortis[d]),]\n  dat <- dat[which(dat$Var==var),]\n  dat$env <- paste(dat$Y,\"_\",dat$L,sep=\"\")\n  \n  # Years\n  n_y <- length(unique(dat$Y))\n  l_y <- sort(unique(dat$Y))\n  \n  # Environments and Design\n  n_env <- length(unique(dat$env))\n  l_env <- unique(dat$env)\n  i_env <- data.frame(matrix(NA,n_env,2))\n  row.names(i_env) <- c(l_env)\n  colnames(i_env)  <- c(\"n_rep\",\"design\")\n  for(ee in 1:n_env){\n    env <- l_env[ee]\n    i_env[[ee,1]] <- length(unique(dat[which(dat$env==env),\"Rep\"]))\n    temp_des <- unique(dat[which(dat$env==env),\"dummy\"])\n    if(temp_des==\"1\") {\n      i_env[[ee,2]] <- \"alpha\"\n    } else if (temp_des==\"0\") {\n      i_env[[ee,2]] <- \"rcbd\"  \n    } else {\n      i_env[[ee,2]] <- \"ERROR\" \n    }\n  }\n  all_env[[d,1]] <- n_env\n  all_env[[d,4]] <- cbind(l_env, i_env)\n  all_env[[d,2]] <- length(which(all_env[[d,4]]$design==\"rcbd\"))\n  all_env[[d,3]] <- length(which(all_env[[d,4]]$design==\"alpha\"))\n  \n  \n  \n  # Locations\n  i_L <- matrix(list(),n_y+2,2)\n  row.names(i_L) <- c(\"Overall\",\"In both years\", l_y)\n  colnames(i_L)  <- c(\"n\",\"list\")\n  i_L[[1,1]] <- length(unique(dat$L))\n  i_L[[1,2]] <-   sort(unique(dat$L))\n  n_L <- i_L[[1,1]]\n  l_L <- i_L[[1,2]]\n  for(yy in 1:n_y){\n    y <- l_y[yy]\n    i_L[[yy+2,1]] <- length(unique(dat[which(dat$Y==y),\"L\"]))\n    i_L[[yy+2,2]] <-   sort(unique(dat[which(dat$Y==y),\"L\"]))\n  }\n  i_L[[2,1]] <- length(intersect(unlist(i_L[3,2]),unlist(i_L[4,2])))\n  i_L[[2,2]] <- intersect(unlist(i_L[3,2]),unlist(i_L[4,2]))\n  all_L[[d,1]] <- i_L\n  \n  # Genotypes\n  i_G <- matrix(list(),n_env+n_y+2,2)\n  row.names(i_G) <- c(\"Overall\",\"In both Years\",l_y,l_env)\n  colnames(i_G)  <- c(\"n\",\"list\")\n  i_G[[1,1]] <- length(unique(dat$G))\n  i_G[[1,2]] <-   sort(unique(dat$G))\n  n_G <- i_G[[1,1]]\n  l_G <- i_G[[1,2]]\n  for(yy in 1:n_y){\n    y <- l_y[yy]\n    i_G[[yy+2,1]] <- length(unique(dat[which(dat$Y==y),\"G\"]))\n    i_G[[yy+2,2]] <-   sort(unique(dat[which(dat$Y==y),\"G\"]))\n  }\n  for(ee in 1:n_env){\n    env <- l_env[ee]\n    i_G[[ee+n_y+2,1]] <- length(unique(dat[which(dat$env==env),\"G\"]))\n    i_G[[ee+n_y+2,2]] <-   sort(unique(dat[which(dat$env==env),\"G\"]))\n  }\n  i_G[[2,1]] <- length(intersect(unlist(i_G[3,2]),unlist(i_G[4,2])))\n  i_G[[2,2]] <- intersect(unlist(i_G[3,2]),unlist(i_G[4,2]))\n  all_G[[d,1]] <- i_G\n  \n  # Heatmap Data\n  lg <- data.frame(L=sort(rep(l_L,n_G)), G=rep(l_G,n_L), Freq=5)\n  \n  \n  lgy <- unique(dat[,c(\"L\",\"G\",\"Y\")])\n  lgy <- lgy[order(lgy$L, lgy$G),]\n  rownames(lgy) <- NULL\n  \n  for(ll in 1:n_L){\n    temp1 <- subset(lgy,lgy$L==l_L[ll])\n    \n    for(gg in 1:n_G){\n      temp2 <- subset(temp1,temp1$G==l_G[gg])\n      lg[which(lg$L==l_L[ll] & lg$G==l_G[gg]),\"Freq\"] <- dim(temp2)[1]\n    } \n  }\n  \n  #lg$L <- as.factor(lg$L)\n  #lg$G <- as.factor(lg$G)\n  lg$dat <- newsors[d]\n  Lsum <- data.frame(L=row.names(tapply(lg$Freq, lg$L, sum)),\n                     Lsum=tapply(lg$Freq, lg$L, sum))\n  Gsum <- data.frame(G=row.names(tapply(lg$Freq, lg$G, sum)),\n                     Gsum=tapply(lg$Freq, lg$G, sum))\n  rownames(Lsum) <- NULL\n  rownames(Gsum) <- NULL\n  lg <- merge(lg, Lsum, \"L\")\n  lg <- merge(lg, Gsum, \"G\")\n  \n\n  L_nums <- data.frame(L=unique(lg[order(-lg$Lsum, -lg$Gsum, -lg$L, -lg$G),]$L), L_num=c(1:length(unique(lg$L))))\n  G_nums <- data.frame(G=unique(lg[order(-lg$Lsum, -lg$Gsum, -lg$L, -lg$G),]$G), G_num=c(1:length(unique(lg$G))))\n  lg     <- lg[order(lg$L),]\n  L_nums <- L_nums[order(L_nums$L),]\n  lg <- merge(lg, L_nums, by=\"L\")\n  lg     <- lg[order(lg$G),]\n  G_nums <- G_nums[order(G_nums$G),]\n  lg <- merge(lg, G_nums, by=\"G\")\n  row.names(lg) <- NULL\n  \n  assign(paste(\"lg_\",newsors[d],sep=\"\"), lg)\n}\n\n\nlgs <- data.frame(rbind(lg_B2_BSA,lg_B2_PC,lg_B3_BSA,lg_B3_PC))\nlgs$sorti  <- substr(lgs$dat,1,2)\nlgs$source <- substr(lgs$dat,4,length(lgs$dat))\n\n# Heatmap Plot\n\nemf(\"OUTPUT Heatmap Design.emf\", width=8, height=4)\ng<-ggplot(lgs, \n       aes(L_num, G_num)) +\n  geom_tile(aes(fill = Freq), color = \"white\") +\n  scale_fill_gradient(low = \"white\", high = \"grey 30\", \n                      breaks = c(0,1,2), guide=\"legend\") +\n  ylab(\"List of Genotypes \") +\n  xlab(\"List of Locations\") +\n  theme(panel.background = element_rect(fill = \"transparent\",colour = \"grey30\"),\n        legend.title = element_text(size=10),\n        legend.text  = element_text(size=12),\n        legend.key   = element_rect(colour=\"black\"),\n        plot.title   = element_text(size=16),\n        axis.title   = element_text(size=14,face=\"bold\"),\n        axis.text.x  = element_text(angle=90, hjust=1)) +\n  labs(fill = \"Number of years a \\ngenotype-location-combination \\nis present in the data\") +\n  facet_grid(sorti ~ source, scales=\"free\", space=\"free\")\nprint(g)\ndev.off()\n\n\n\n##########\n# OUTPUT #\n##########\n\n# Environments total, Design per Environment\nall_env\n#Replicates per Environment\ntable(all_env[[1,4]]$n_rep) #B2_BSA\ntable(all_env[[2,4]]$n_rep) #B3_BSA\ntable(all_env[[3,4]]$n_rep) #B2_PC\ntable(all_env[[4,4]]$n_rep) #B3_PC\n# Locations per year, overlapping\nall_L[1] #B2_BSA\nall_L[2] #B3_BSA\nall_L[3] #B2_PC\nall_L[4] #B3_PC\n# Genotypes total, per year, overlapping, per environment\nall_G[1] #B2_BSA\nall_G[2] #B3_BSA\nall_G[3] #B2_PC\nall_G[4] #B3_PC\n\n\n############################\n# Create Table for Article #\n############################\n\nLocNumber <- as.data.frame(t(rbind(\n                           t(all_L[[1]][,1]),\n                           t(all_L[[2]][,1]),\n                           t(all_L[[3]][,1]),\n                           t(all_L[[4]][,1])\n                           )))\ncolnames(LocNumber) <- newsors\nrownames(LocNumber) <- c(\"L overall\",\"L in both years\",\"L 2014\", \"L 2015\")\n\nGenNumber <- as.data.frame(t(rbind(t(all_G[[1]][c(1:4),1]),\n                           t(all_G[[2]][c(1:4),1]),\n                           t(all_G[[3]][c(1:4),1]),\n                           t(all_G[[4]][c(1:4),1]))))\ncolnames(GenNumber) <- newsors\nrownames(GenNumber) <- c(\"G overall\",\"G in both years\",\"G 2014\", \"G 2015\")\n\nEnvDesign <- as.data.frame(t(all_env[,c(1:3)]))\nrownames(EnvDesign) <- c(\"Env overall\", \"Env RCBD\", \"Env Alpha\")\n\n  newsors <- c(\"B2_BSA\", \"B3_BSA\", \"B2_PC\", \"B3_PC\")\n  c0<-data.frame(Reps=c(2,3,4))\n  c1<-data.frame(table(all_env[[1,4]]$n_rep))\n  c2<-data.frame(table(all_env[[2,4]]$n_rep))\n  c3<-data.frame(table(all_env[[3,4]]$n_rep))\n  c4<-data.frame(table(all_env[[4,4]]$n_rep))\n  colnames(c1) <- c(\"Reps\",newsors[1])\n  colnames(c2) <- c(\"Reps\",newsors[2])\n  colnames(c3) <- c(\"Reps\",newsors[3])\n  colnames(c4) <- c(\"Reps\",newsors[4])\n  c11     <- merge(c0,c1,  by=\"Reps\", all=TRUE)\n  c12     <- merge(c11,c2, by=\"Reps\", all=TRUE)\n  c23     <- merge(c12,c3, by=\"Reps\", all=TRUE)\n  EnvReps <- merge(c23,c4, by=\"Reps\", all=TRUE)[,c(2:5)]\nEnvReps[is.na(EnvReps)] <- \"-\"\nrownames(EnvReps) <- c(\"2 reps\",\"3 reps\", \"4 reps\")\n\nArticleTable <- rbind(GenNumber, LocNumber, EnvDesign, EnvReps)\nArticleTable$name <- rownames(ArticleTable)\nArticleTable <- data.frame(matrix(unlist(ArticleTable), ncol=5, byrow=F))[,c(5,1,2,3,4)]\ncolnames(ArticleTable) <- c(\"info\",newsors)\n\nwrite.table(ArticleTable, file=\"OUTPUT TableDesignSummary.txt\", sep=\"\\t\", row.names = F)\n\n###########################################\n# Overlapping Genotypes between Sortiment #\n###########################################\n\nGlBSA1 <- unlist(all_G[[1]][1,2]) #B2_BSA\nGlBSA2 <- unlist(all_G[[2]][1,2]) #B3_BSA\nGlPC1  <- unlist(all_G[[3]][1,2]) #B2_PC\nGlPC2  <- unlist(all_G[[4]][1,2]) #B3_PC\n\n########################\n# Balancedness measure #\n########################\n\nsss <- 4\n\ntemp <- subset(fulldat, Sorti==sortis[sss])\n\nhave <- dim(unique(temp[,c(\"Y\",\"L\",\"G\")]))[1]\nwant <- all_env[[sss]]*unlist(all_G[[sss]][1,1]) #B2_BSA\nround(have/want,3)\n\n",
    "created" : 1512989627164.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3233959143",
    "id" : "7A456E52",
    "lastKnownWriteTime" : 1513006688,
    "last_content_update" : 1513006688201,
    "path" : "D:/User/pschmidt/Desktop/Rath/Final/Publication/SCRIPT/2 experimental design descriptive.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}