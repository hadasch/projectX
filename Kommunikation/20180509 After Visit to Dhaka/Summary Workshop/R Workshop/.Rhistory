### Obtain adjusted means (BLUEs) per genotype
##############################################
library(lme4)
library(asreml)
mod.lme <- lmer(formula = mean.yield ~ 0 + Group + Group:r.i + t.k +
(1|G) + (1|L) + (1|Y) +
(1|Y:L) + (1|Y:G) + (1|L:G),
data    = meandata)
rm(list=ls())
meandata <- readRDS("GxEmeans.rds")
# lme4
mod.lme <- lmer(formula = mean.yield ~ 0 + Group + Group:r.i + t.k +
(1|G) + (1|L) + (1|Y) +
(1|Y:L) + (1|Y:G) + (1|L:G),
data    = meandata)
library(lmerTest)
rm(list=ls())
meandata <- readRDS("GxEmeans.rds")
# lme4
mod.lme <- lmer(formula = mean.yield ~ 0 + Group + Group:r.i + t.k +
(1|G) + (1|L) + (1|Y) +
(1|Y:L) + (1|Y:G) + (1|L:G),
data    = meandata)
ranef(mod.lme)
ranef(mod.lme)$G
ranef(mod.lme)$G
predict(mod.asr, classify="G")
# asreml
mod.asr <- asreml(fixed  = mean.yield ~ 0 + Group + Group:r.i + t.k,
random = ~ G + L + Y + Y:L + L:G + Y:G,
data   = meandata)
predict(mod.asr, classify="G")
x <- predict(mod.asr, classify="G")
x$predictions
x$predictions$pvals
G.BLUPs.lm4 <- ranef(mod.lme)$G
G.BLUPs.lm4
G.BLUPs.asr <-  predict(mod.asr, classiy="G")$predictions$pvals
G.BLUPs.asr
G.BLUPs.asr <-  predict(mod.asr, classify="G")$predictions$pvals
G.BLUPs.asr <-  predict(mod.asr, classify="G")$predictions$pvals
G.BLUPs.asr
G.BLUPs.lm4
G.BLUPs.asr <-  predict(mod.asr, classify="G", only="G")$predictions$pvals
G.BLUPs.asr
G.BLUPs.lm4
fix.G.asr <- asreml(fixed  = mean.yield ~ 0 + G + t.k,
random = ~ L + Y + Y:L + L:G + Y:G,
data   = meandata)
G.BLUEs.asr <-  predict(fix.G.asr, classify="G", only="G")$predictions$pvals
G.BLUEs.asr
fix.G.asr <- asreml(fixed  = mean.yield ~ 0 + G + t.k,
random = ~ L + Y + Y:L + L:G + Y:G,
data   = meandata)
G.BLUEs.asr <-  predict(fix.G.asr, classify="G")$predictions$pvals
G.BLUEs.asr
### asreml
fix.G.asr <- asreml(fixed  = mean.yield ~ G + t.k,
random = ~ L + Y + Y:L + L:G + Y:G,
data   = meandata)
G.BLUEs.asr <-  predict(fix.G.asr, classify="G")$predictions$pvals
G.BLUEs.asr
G.BLUEs.asr <-  predict(fix.G.asr, classify="G")$predictions$pvals[,1:3]
G.BLUEs.asr
library(emmeans)
lsmeans(fix.G.lme, "G")
fix.G.lme <- lmer(formula = mean.yield ~ 0 + G + t.k +
(1|L) + (1|Y) +
(1|Y:L) + (1|Y:G) + (1|L:G),
data    = meandata)
fix.G.lme <- lmer(formula = mean.yield ~ G + t.k +
(1|L) + (1|Y) +
(1|Y:L) + (1|Y:G) + (1|L:G),
data    = meandata)
library(emmeans)
lsmeans(fix.G.lme, "G")
G.BLUEs.lme <- lsmeans(fix.G.lme, "G")
G.BLUEs.lme
G.BLUEs.lme <- lsmeans(fix.G.lme, "G")[,1:2]
G.BLUEs.asr <- predict(fix.G.asr, classify="G")$predictions$pvals
G.BLUEs.asr <- predict(fix.G.asr, classify="G")$predictions$pvals
G.BLUEs.asr
G.BLUEs.asr <- predict(fix.G.asr, classify="G")$predictions$pvals[,1:3]
lsmeans(fix.G.lme, "G")[,1:2]
G.BLUEs.lme <- lsmeans(fix.G.lme, "G")
G.BLUEs.lme
require(RCurl)
dat <-read.csv(text=getURL("https://raw.githubusercontent.com/SchmidtPaul/HeritabilityScripts/master/R%20(asreml)/Example%20data%20alpha%20design.csv"), header=T)
dat[c("rep","block","gen")]  <- lapply(dat[c("rep","block","gen")], as.factor)
dat
asreml(fixed  = y ~ G,
data   = trial.data)
trial.data <- dat
asreml(fixed  = y ~ G,
data   = trial.data)
colnames(trial.data)
asreml(fixed  = y ~ gen,
data   = trial.data)
CRD.asr <- asreml(fixed  = y ~ gen,
data   = trial.data)
CRD.mme <- mmer2(fixed  = y ~ gen,
data   = trial.data)
library(sommer)
library(asreml)
library(lme4)
CRD.asr <- asreml(fixed  = y ~ gen,
data   = trial.data)
CRD.mme <- mmer2(fixed  = y ~ gen,
data   = trial.data)
CRD.lm  <- lm(formula = y ~ gen,
data    = trial.data)
# Genotype as fixed effect
CRD.fix.asr <- asreml(fixed  = y ~ gen,
data   = trial.data)
CRD.fix.lm  <- lm(formula = y ~ gen,
data    = trial.data)
# Genotype as random effect
CRD.ran.asr <- asreml(fixed  = y ~ 1,
random = ~ gen,
data   = trial.data)
CRD.ran.mme <- mmer2(fixed  = y ~ 1,
random = ~ gen,
data   = trial.data)
CRD.ran.lm  <- lm(formula = y ~ (1|gen),
data    = trial.data)
CRD.ran.lm  <- lmer(formula = y ~ (1|gen),
data    = trial.data)
### Completely Randomized Design (CRD) ###
##########################################
require(RCurl)
dat <-read.csv(text=getURL("https://raw.githubusercontent.com/SchmidtPaul/HeritabilityScripts/master/R%20(asreml)/Example%20data%20alpha%20design.csv"), header=T)
dat[c("rep","block","gen")]  <- lapply(dat[c("rep","block","gen")], as.factor)
trial.data <- dat
library(sommer)
library(asreml)
library(lme4)
# Genotype as fixed effect
CRD.fix.asr <- asreml(fixed  = y ~ gen,
data   = trial.data)
CRD.fix.lm  <- lm(formula = y ~ gen,
data    = trial.data)
# Genotype as random effect
CRD.ran.asr <- asreml(fixed  = y ~ 1,
random = ~ gen,
data   = trial.data)
CRD.ran.mme <- mmer2(fixed  = y ~ 1,
random = ~ gen,
data   = trial.data)
CRD.ran.lm  <- lmer(formula = y ~ (1|gen),
data    = trial.data)
