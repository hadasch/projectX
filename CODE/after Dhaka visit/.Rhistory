vc.asr
asr <- asreml(fixed  = Yield ~ 1,
random = ~ Y + L + Y:L + G:Y + G:corgh(L) + Y:L:Rep,
data   = test, ran.order = "user")
vc.asr <- round(summary(asr)$varcomp[, c("component", "std.error")],3)
vc.asr
data.frame(VarCorr(lme))[,c(1,4,5)]
data.frame(VarCorr(lme))
VarCorr(lme)
library(asreml)
asr <- asreml(fixed  = Yield ~ 1,
random = ~ Y + L + Y:L + G:Y + G:corgh(L) + Y:L:Rep,
data   = test, ran.order = "user")
library(lme4)
library(lmerTest)
lme <- lmer(formula = Yield ~ (1|Y) + (1|L) + (1|Y:L) +
(1|Y:G) + (L-1|G) + (1|Y:L:Rep),
data    = test)
round(summary(asr)$varcomp[, c("component", "std.error")],3)
data.frame(VarCorr(lme))
round(summary(asr)$varcomp[, c("component", "std.error")],3)
VarCorr(lme)
data.table(VarCorr(lme))
data.frame(VarCorr(lme))
vclme <- data.frame(VarCorr(lme))
vclme <- data.table(data.frame(VarCorr(lme)))
vclme
vclme[ is.na(var2)==T, sdcor:=0 ]
vclme
vclme[ is.na(var2)==T, sdcor:=NA ]
vclme
vclme[, round(.SD), .SDcol=c("vcov")]
vclme[, c("vcov", "sdcor") := round(.SD), .SDcol=c("vcov", "sdcor")]
vclme
cols <- c("vcov", "sdcor")
vclme <- data.table(data.frame(VarCorr(lme)))
vclme[ is.na(var2)==T, sdcor:=NA ]
cols <- c("vcov", "sdcor")
vclme[, (cols) := round(.SD), .SDcol=cols]
vclme
vclme <- data.table(data.frame(VarCorr(lme)))
vclme[ is.na(var2)==T, sdcor:=NA ]
cols <- c("vcov", "sdcor")
vclme[, (cols) := round(.SD, 3), .SDcol=cols]
vclme
round(summary(asr)$varcomp[, c("component", "std.error")],3)
vclme
rm(list=ls())
setwd("C:/Users/Paul/Documents/GitHub/projectX/CODE/after Dhaka visit")
library(lme4)
library(lmerTest)
# Import
raw <- read.delim("Boro dataset.txt")
raw$t.k   <- as.numeric(substr(raw$Year, 1, 4))
raw$Env   <- as.factor(paste(raw$Year, raw$Location, sep="-"))
raw$r.i   <- as.numeric(raw$Year.of.release)
raw$G     <- as.factor(raw$Variety)
raw$L     <- as.factor(raw$Location)
raw$Y     <- as.factor(raw$t.k)
raw$Rep   <- as.factor(raw$Rep)
raw$Group <- as.factor(raw$Group)
plotdata <- raw[ ,c("Y", "t.k", "r.i", "L", "Env", "G", "Rep", "Group", "Yield")]
plotdata <- as.data.table(plotdata)
# Loc pairs - genetic correlation
Locs <- levels(plotdata$L)
test <- droplevels(plotdata[ L %in% Locs[1:2]])
lme <- lmer(formula = Yield ~ (1|Y) + (1|L) + (1|Y:L) +
(1|Y:G) + (L-1|G) + (1|Y:L:Rep),
data    = test)
round(summary(asr)$varcomp[, c("component", "std.error")],3)
vclme <- data.table(data.frame(VarCorr(lme)))
vclme[ is.na(var2)==T, sdcor:=NA ]
cols <- c("vcov", "sdcor")
vclme[, (cols) := round(.SD, 3), .SDcol=cols]
vclme
rm(list=ls())
setwd("C:/Users/Paul/Documents/GitHub/projectX/CODE/after Dhaka visit")
library(lme4)
library(lmerTest)
# Import
raw <- read.delim("Boro dataset.txt")
raw$t.k   <- as.numeric(substr(raw$Year, 1, 4))
raw$Env   <- as.factor(paste(raw$Year, raw$Location, sep="-"))
raw$r.i   <- as.numeric(raw$Year.of.release)
raw$G     <- as.factor(raw$Variety)
raw$L     <- as.factor(raw$Location)
raw$Y     <- as.factor(raw$t.k)
raw$Rep   <- as.factor(raw$Rep)
raw$Group <- as.factor(raw$Group)
plotdata <- raw[ ,c("Y", "t.k", "r.i", "L", "Env", "G", "Rep", "Group", "Yield")]
plotdata <- as.data.table(plotdata)
# Loc pairs - genetic correlation
Locs <- levels(plotdata$L)
test <- droplevels(plotdata[ L %in% Locs[1:2]])
lme <- lmer(formula = Yield ~ (1|Y) + (1|L) + (1|Y:L) +
(1|Y:G) + (L-1|G) + (1|Y:L:Rep),
data    = test)
round(summary(asr)$varcomp[, c("component", "std.error")],3)
vclme <- data.table(data.frame(VarCorr(lme)))
vclme
vclme <- data.table(data.frame(VarCorr(lme)))
vclme[ is.na(var2)==T, sdcor:=NA ]
cols <- c("vcov", "sdcor")
vclme[, (cols) := round(.SD, 3), .SDcol=cols]
vclme
vclme[!is.na(var2), ]
vclme[!is.na(var2), vcov := sdcor]
vclme
vclme[!is.na(var2), .(vcov, var1) := c(sdcor, "gen.corr."]
vclme <- data.table(data.frame(VarCorr(lme)))
vclme[ is.na(var2)==T, sdcor:=NA ]
cols <- c("vcov", "sdcor")
vclme[, (cols) := round(.SD, 3), .SDcol=cols]
vclme[!is.na(var2), c("vcov", "var1") := .(sdcor, "gen.corr."]
vclme
vclme[!is.na(var2), c("vcov", "var1") := .(sdcor, "gen.corr."]
vclme[!is.na(var2), c("vcov", "var1") := list(sdcor, "gen.corr.")]
vclme
vclme[!is.na(var2), c("vcov", "var1") := .(sdcor, "gen.corr.")]
vclme <- data.table(data.frame(VarCorr(lme)))
vclme
vclme[!is.na(var2), c("vcov", "var1") := .(sdcor, "gen.corr.")]
vclme
vclme <- data.table(data.frame(VarCorr(lme)))
vclme[!is.na(var2), c("vcov", "var1") := .(sdcor, "gen.corr.")]
vclme
vclme[!is.na(var2), c("vcov", "var1") := .(sdcor, "corr.")]
vclme
vclme[var1=="(Intercept)", var1 := NA]
vclme
vclme <- data.table(data.frame(VarCorr(lme)))
vclme[!is.na(var2), c("vcov", "var1") := .(sdcor, "Lcorr.")]
vclme[var1=="(Intercept)", var1 := NA]
vclme
vclme[sdcor:=NULL]
setnames(vclme, c("grp", "var1", "vcov"), c("vc.1", "vc.2", "estimate"))
vclme
vclme <- data.table(data.frame(VarCorr(lme)))
vclme[!is.na(var2), c("vcov", "var1") := .(sdcor, "Lcorr.")]
vclme[var1=="(Intercept)", var1 := NA]
data.table[vc.1=vclme$grp, vc.2=vclme$var1, estimate=round(vclme$vcov, 3)]
data.frame[vc.1=vclme$grp, vc.2=vclme$var1, estimate=round(vclme$vcov, 3)]
vclme
round(vclme$vcov, 3)
vclme$var1
vclme$grp
data.frame(vc.1=vclme$grp,
vc.2=vclme$var1,
estimate=round(vclme$vcov, 3))
data.table(vc.1=vclme$grp,
vc.2=vclme$var1,
estimate=round(vclme$vcov, 3))
vclme <- data.table(data.frame(VarCorr(lme)))
vclme[!is.na(var2), c("vcov", "var1") := .(sdcor, "L.corr")]
vclme[var1=="(Intercept)", var1 := NA]
setnames(vclme, c("grp", "var1", "vcov"), c("vc.1", "vc.2", "estimate"))
data.table(vc.1=vclme$grp,
vc.2=vclme$var1,
estimate=round(vclme$vcov, 3))
vclme <- data.table(data.frame(VarCorr(lme)))
vclme[!is.na(var2), c("vcov", "var1") := .(sdcor, "L.corr")]
vclme[var1=="(Intercept)", var1 := NA]
data.table(vc.1=vclme$grp,
vc.2=vclme$var1,
estimate=round(vclme$vcov, 3))
vclme[order(vc.1)]
vclme <- data.table(vc.1=vclme$grp,
vc.2=vclme$var1,
estimate=round(vclme$vcov, 3))
vclme[order(vc.1)]
vclme[order(vc.1, vc.2)]
lme <- lmer(formula = Yield ~ (1|Y) + (1|L) + (1|Y:L) +
(1|Y:G) + (L-1|G) + (1|Y:L:Rep),
data    = test)
vclme <- data.table(data.frame(VarCorr(lme)))
vclme[!is.na(var2), c("vcov", "var1") := .(sdcor, "L.corr")]
vclme[var1=="(Intercept)", var1 := NA]
vclme <- data.table(vc.1=vclme$grp,
vc.2=vclme$var1,
estimate=round(vclme$vcov, 3))
vclme[order(vc.1, vc.2)]
combn(3,4)
combn(3,2)
combn(Locs,2)
# Prepare list for all location pairs
Locs <- levels(plotdata$L)
combn(Locs,2)
rm(list=ls())
setwd("C:/Users/Paul/Documents/GitHub/projectX/CODE/after Dhaka visit")
library(lme4)
library(lmerTest)
# Import
raw <- read.delim("Boro dataset.txt")
raw$t.k   <- as.numeric(substr(raw$Year, 1, 4))
raw$Env   <- as.factor(paste(raw$Year, raw$Location, sep="-"))
raw$r.i   <- as.numeric(raw$Year.of.release)
raw$G     <- as.factor(raw$Variety)
raw$L     <- as.factor(raw$Location)
raw$Y     <- as.factor(raw$t.k)
raw$Rep   <- as.factor(raw$Rep)
raw$Group <- as.factor(raw$Group)
plotdata <- raw[ ,c("Y", "t.k", "r.i", "L", "Env", "G", "Rep", "Group", "Yield")]
plotdata <- as.data.table(plotdata)
# Prepare list for all location pairs
Locs <- levels(plotdata$L)
combn(Locs,2)
Locpairs <- combn(Locs,2)
Locpairs
Locpairs[1]
Locpairs[,1]
Locpairs[,1][1]
Locpairs[,1][2]
matrix(list(), length(Locs), length(Locs))
list.pairs <- matrix(list(), length(Locs), length(Locs))
rownames(list.pairs) <- Locs
list.pairs
colnames(list.pairs) <- Locs
list.pairs <- matrix(list(), length(Locs), length(Locs))
rownames(list.pairs) <- Locs; colnames(list.pairs) <- Locs
list.pairs
vc
dim(Locpairs)
dim(Locpairs)[2]
Locpairs
i <- 3
pair <- Locpairs[,i]
pair
plotdata[L %in% pair]
pair
pair.data <- droplevels(plotdata[L %in% pair])
list.pairs[[pair[1], pair[2]]]
rm(list=ls())
setwd("C:/Users/Paul/Documents/GitHub/projectX/CODE/after Dhaka visit")
library(lme4)
library(lmerTest)
# Import
raw <- read.delim("Boro dataset.txt")
raw$t.k   <- as.numeric(substr(raw$Year, 1, 4))
raw$Env   <- as.factor(paste(raw$Year, raw$Location, sep="-"))
raw$r.i   <- as.numeric(raw$Year.of.release)
raw$G     <- as.factor(raw$Variety)
raw$L     <- as.factor(raw$Location)
raw$Y     <- as.factor(raw$t.k)
raw$Rep   <- as.factor(raw$Rep)
raw$Group <- as.factor(raw$Group)
plotdata <- raw[ ,c("Y", "t.k", "r.i", "L", "Env", "G", "Rep", "Group", "Yield")]
plotdata <- as.data.table(plotdata)
# Prepare list for all location pairs
Locs <- levels(plotdata$L)
Locpairs <- combn(Locs,2)
list.pairs <- matrix(list(), length(Locs), length(Locs))
rownames(list.pairs) <- Locs; colnames(list.pairs) <- Locs
for (i in 1:dim(Locpairs)[2]){
pair      <- Locpairs[,i]
pair.data <- droplevels(plotdata[L %in% pair])
# model fitting
lme <- lmer(formula = Yield ~ (1|Y) + (1|L) + (1|Y:L) +
(1|Y:G) + (L-1|G) + (1|Y:L:Rep),
data    = pair.data)
# vc formatting
vc <- data.table(data.frame(VarCorr(lme)))
vc[!is.na(var2), c("vcov", "var1") := .(sdcor, "L.corr")]
vc[var1=="(Intercept)", var1 := NA]
vc <- data.table(vc.1=vc$grp, vc.2=vc$var1,
estimate=round(vc$vcov, 3))
vc <- vc[order(vc.1, vc.2)]
# result output
list.pairs[[pair[1], pair[2]]] <- vc
rm(pair, pair.data, vc)
}
list.pairs
plyr::ldply(result.per.site[,"G.mean"],   data.frame, .id="Site")
plyr::ldply(list.pairs,   data.frame, .id="Site")
list.pairs <- list()
list.pairs
list.pairs[[pair]] <- "test"
list.pairs <- list(), length(Locpairs), 1)
list.pairs
Locpairs <- combn(Locs,2)
list.pairs <- matrix(list(), length(Locpairs), 1)
rownames(list.pairs) <- Locpairs
list.pairs
Locpairs
paste(Locpairs[1,], Locpairs[2,])
rownames(list.pairs) <- paste(Locpairs[1,], Locpairs[2,], sep="-")
list.pairs <- matrix(list(), length(Locpairs), 1)
list.pairs
Locpairs <- combn(Locs,2)
Locpairs
dim(Locpairs)
list.pairs <- matrix(list(), dim(Locpairs)[2], 1)
rownames(list.pairs) <- paste(Locpairs[1,], Locpairs[2,], sep="-")
list.pairs
rm(list=ls())
setwd("C:/Users/Paul/Documents/GitHub/projectX/CODE/after Dhaka visit")
library(lme4)
library(lmerTest)
# Import
raw <- read.delim("Boro dataset.txt")
raw$t.k   <- as.numeric(substr(raw$Year, 1, 4))
raw$Env   <- as.factor(paste(raw$Year, raw$Location, sep="-"))
raw$r.i   <- as.numeric(raw$Year.of.release)
raw$G     <- as.factor(raw$Variety)
raw$L     <- as.factor(raw$Location)
raw$Y     <- as.factor(raw$t.k)
raw$Rep   <- as.factor(raw$Rep)
raw$Group <- as.factor(raw$Group)
plotdata <- raw[ ,c("Y", "t.k", "r.i", "L", "Env", "G", "Rep", "Group", "Yield")]
plotdata <- as.data.table(plotdata)
# Prepare list for all location pairs
Locs <- levels(plotdata$L)
Locpairs <- combn(Locs,2)
list.pairs <- matrix(list(), dim(Locpairs)[2], 1)
rownames(list.pairs) <- paste(Locpairs[1,], Locpairs[2,], sep="-")
for (i in 1:dim(Locpairs)[2]){
pair      <- Locpairs[,i]
pair.data <- droplevels(plotdata[L %in% pair])
# model fitting
lme <- lmer(formula = Yield ~ (1|Y) + (1|L) + (1|Y:L) +
(1|Y:G) + (L-1|G) + (1|Y:L:Rep),
data    = pair.data)
# vc formatting
vc <- data.table(data.frame(VarCorr(lme)))
vc[!is.na(var2), c("vcov", "var1") := .(sdcor, "L.corr")]
vc[var1=="(Intercept)", var1 := NA]
vc <- data.table(vc.1=vc$grp, vc.2=vc$var1,
estimate=round(vc$vcov, 3))
vc <- vc[order(vc.1, vc.2)]
# result output
list.pairs[[i,]] <- vc
rm(pair, pair.data, vc)
}
dim(Locpairs)[2]
list.pairs
rm(list=ls())
setwd("C:/Users/Paul/Documents/GitHub/projectX/CODE/after Dhaka visit")
library(lme4)
library(lmerTest)
# Import
raw <- read.delim("Boro dataset.txt")
raw$t.k   <- as.numeric(substr(raw$Year, 1, 4))
raw$Env   <- as.factor(paste(raw$Year, raw$Location, sep="-"))
raw$r.i   <- as.numeric(raw$Year.of.release)
raw$G     <- as.factor(raw$Variety)
raw$L     <- as.factor(raw$Location)
raw$Y     <- as.factor(raw$t.k)
raw$Rep   <- as.factor(raw$Rep)
raw$Group <- as.factor(raw$Group)
plotdata <- raw[ ,c("Y", "t.k", "r.i", "L", "Env", "G", "Rep", "Group", "Yield")]
plotdata <- as.data.table(plotdata)
# Prepare list for all location pairs
Locs <- levels(plotdata$L)
Locpairs <- combn(Locs,2)
list.pairs <- matrix(list(), dim(Locpairs)[2], 1)
rownames(list.pairs) <- paste(Locpairs[1,], Locpairs[2,], sep="-")
for (i in 1:dim(Locpairs)[2]){
pair      <- Locpairs[,i]
pair.data <- droplevels(plotdata[L %in% pair])
# model fitting
lme <- lmer(formula = Yield ~ (1|Y) + (1|L) + (1|Y:L) +
(1|Y:G) + (L-1|G) + (1|Y:L:Rep),
data    = pair.data)
# vc formatting
vc <- data.table(data.frame(VarCorr(lme)))
vc[!is.na(var2), c("vcov", "var1") := .(sdcor, "L.corr")]
vc[var1=="(Intercept)", var1 := NA]
vc <- data.table(vc.1=vc$grp, vc.2=vc$var1,
estimate=round(vc$vcov, 3))
vc <- vc[order(vc.1, vc.2)]
# result output
list.pairs[[i,1]] <- vc
rm(pair, pair.data, vc)
}
plyr::ldply(list.pairs[,"G.mean"],   data.frame, .id="Site")
plyr::ldply(list.pairs[,1],   data.frame, .id="Site")
data.table(plyr::ldply(list.pairs[,1],   data.frame, .id="Site Pair"))
out <- data.table(plyr::ldply(list.pairs[,1],   data.frame, .id="Site Pair"))
out
out.all <- data.table(plyr::ldply(list.pairs[,1],   data.frame, .id="Site Pair"))
out.gencorr <- out.all[vc.2=="L.corr"]
out.gencorr
strsplit(out.gencorr$`Site Pair`)
strsplit(out.gencorr$`Site Pair`,4)
strsplit(out.gencorr$`Site Pair`, split="-", fxied=T)
strsplit(out.gencorr$`Site Pair`, split="-", fixed=T)
out.gencorr$`Site Pair`
strsplit(out.gencorr[,1], split='-', fixed=T)
strsplit(out.gencorr[,1], split='-')
library(stringr)
out.gencorr[,1]
str_split(out.gencorr[,1], "-")
str_split("hello-word", "-")
str_split(out.gencorr$`Site Pair`, "-")
str_split(out.gencorr$`Site Pair`, "-")[1]
str_split(out.gencorr$`Site Pair`, "-")[[]][1]
# Format results
out.all <- data.table(plyr::ldply(list.pairs[,1],   data.frame, .id="Site Pair"))
out.gencorr <- out.all[vc.2=="L.corr"]
out.gencorr
str_split(out.gencorr$`Site Pair`, "-")
str_split(out.gencorr$`Site Pair`, "-", simplify = T)
sites <- str_split(out.gencorr$`Site Pair`, "-", simplify = T)
out.gencorr[, c("Site.1", "Site.2") := .(sites[1], sites[2])]
out.gencorr
sites <- str_split(out.gencorr$`Site Pair`, "-", simplify = T)
out.gencorr[, c("Site.1", "Site.2") := .(sites[1], sites[2])]
out.gencorr
sites
out.gencorr[, c("Site.1", "Site.2") := .(sites[,1], sites[,2])]
out.gencorr
matrix(10,10)
matrix(10,10, 10)
matrix(NA,10, 10)
data.table(matrix(NA,10,10))
data.frame(matrix(NA,10,10))
g.corrs <- data.frame(matrix(NA,10,10))
rownames(g.corrs) <- Locs
rownames(g.corrs) <- Locs; colnames(g.corrs) <- Locs
g.corrs
vc[vc.2=="L.corr", "estimate"]
i <- 2
pair      <- Locpairs[,i]
pair.data <- droplevels(plotdata[L %in% pair])
# model fitting
lme <- lmer(formula = Yield ~ (1|Y) + (1|L) + (1|Y:L) +
(1|Y:G) + (L-1|G) + (1|Y:L:Rep),
data    = pair.data)
# vc formatting
vc <- data.table(data.frame(VarCorr(lme)))
vc[!is.na(var2), c("vcov", "var1") := .(sdcor, "L.corr")]
vc[var1=="(Intercept)", var1 := NA]
vc <- data.table(vc.1=vc$grp, vc.2=vc$var1,
estimate=round(vc$vcov, 3))
vc <- vc[order(vc.1, vc.2)]
vc
vc[vc.2=="L.corr", "estimate"]
pair
g.corrs[pairs[1], pair[2]]
g.corrs
pairs[1]
g.corrs[pair[1], pair[2]]
# result output
g.corrs[pair[1], pair[2]] <- vc[vc.2=="L.corr", "estimate"]
g.corrs
rm(list=ls())
setwd("C:/Users/Paul/Documents/GitHub/projectX/CODE/after Dhaka visit")
library(lme4)
library(lmerTest)
library(plyr)
library(stringr)
# Import
raw <- read.delim("Boro dataset.txt")
raw$t.k   <- as.numeric(substr(raw$Year, 1, 4))
raw$Env   <- as.factor(paste(raw$Year, raw$Location, sep="-"))
raw$r.i   <- as.numeric(raw$Year.of.release)
raw$G     <- as.factor(raw$Variety)
raw$L     <- as.factor(raw$Location)
raw$Y     <- as.factor(raw$t.k)
raw$Rep   <- as.factor(raw$Rep)
raw$Group <- as.factor(raw$Group)
plotdata <- raw[ ,c("Y", "t.k", "r.i", "L", "Env", "G", "Rep", "Group", "Yield")]
plotdata <- as.data.table(plotdata)
# Prepare list for all location pairs
Locs <- levels(plotdata$L)
Locpairs <- combn(Locs,2)
g.corrs <- data.frame(matrix(NA,10,10))
rownames(g.corrs) <- Locs; colnames(g.corrs) <- Locs
for (i in 1:dim(Locpairs)[2]){
pair      <- Locpairs[,i]
pair.data <- droplevels(plotdata[L %in% pair])
# model fitting
lme <- lmer(formula = Yield ~ (1|Y) + (1|L) + (1|Y:L) +
(1|Y:G) + (L-1|G) + (1|Y:L:Rep),
data    = pair.data)
# vc formatting
vc <- data.table(data.frame(VarCorr(lme)))
vc[!is.na(var2), c("vcov", "var1") := .(sdcor, "L.corr")]
vc[var1=="(Intercept)", var1 := NA]
vc <- data.table(vc.1=vc$grp, vc.2=vc$var1,
estimate=round(vc$vcov, 3))
vc <- vc[order(vc.1, vc.2)]
# result output
g.corrs[pair[1], pair[2]] <- vc[vc.2=="L.corr", "estimate"]
rm(pair, pair.data, vc)
}
g.corrs
fwrite(g.corrs, "g.corrs.txt", sep="\t", row.names = T)
i <- 1
lme <- lmer(formula = Yield ~ (1|Y) + (1|L) + (1|Y:L) +
(1|Y:G) + (L-1|G) + (1|Y:L:Rep),
data    = pair.data)
# vc formatting
vc <- data.table(data.frame(VarCorr(lme)))
vc[!is.na(var2), c("vcov", "var1") := .(sdcor, "L.corr")]
vc[var1=="(Intercept)", var1 := NA]
vc <- data.table(vc.1=vc$grp, vc.2=vc$var1,
estimate=round(vc$vcov, 3))
vc <- vc[order(vc.1, vc.2)]
pair      <- Locpairs[,i]
pair.data <- droplevels(plotdata[L %in% pair])
# model fitting
lme <- lmer(formula = Yield ~ (1|Y) + (1|L) + (1|Y:L) +
(1|Y:G) + (L-1|G) + (1|Y:L:Rep),
data    = pair.data)
vc <- data.table(data.frame(VarCorr(lme)))
vc[!is.na(var2), c("vcov", "var1") := .(sdcor, "L.corr")]
vc[var1=="(Intercept)", var1 := NA]
vc <- data.table(vc.1=vc$grp, vc.2=vc$var1,
estimate=round(vc$vcov, 3))
vc <- vc[order(vc.1, vc.2)]
vc
fwrite(g.corrs, "g.corrs.txt", sep="\t", row.names = T, dec=",")
